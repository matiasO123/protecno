// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Protecno.Models;

#nullable disable

namespace Protecno.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509042844_secondmig")]
    partial class secondmig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Protecno.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("reparacionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("reparacionId");

                    b.ToTable("eventos");
                });

            modelBuilder.Entity("Protecno.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PagoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("detalle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("nroFactura")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PagoId");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("Protecno.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReparacionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("importe")
                        .HasColumnType("TEXT");

                    b.Property<string>("medioPago")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReparacionId");

                    b.ToTable("pago");
                });

            modelBuilder.Entity("Protecno.Models.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("dni")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("fechaNac")
                        .HasColumnType("TEXT");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("personas");

                    b.HasDiscriminator().HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Protecno.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("aniofabricacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("clienteid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("clienteid");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("Protecno.Models.Reparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("estadoReparacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fechaFinalizacion")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("productoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("productoID");

                    b.ToTable("reparacions");
                });

            modelBuilder.Entity("Protecno.Models.ReparacionRepuesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReparacionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RepuestoId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("precio")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ReparacionId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("reparacionRepuestos");
                });

            modelBuilder.Entity("Protecno.Models.Repuesto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("proveedorid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("proveedorid");

                    b.ToTable("repuestos");
                });

            modelBuilder.Entity("Protecno.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("Protecno.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("rolId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("rolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Protecno.Models.Cliente", b =>
                {
                    b.HasBaseType("Protecno.Models.Persona");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("Protecno.Models.Empleado", b =>
                {
                    b.HasBaseType("Protecno.Models.Persona");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("inicioActividad")
                        .HasColumnType("TEXT");

                    b.Property<int>("usuarioId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("usuarioId");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("Protecno.Models.Proveedor", b =>
                {
                    b.HasBaseType("Protecno.Models.Persona");

                    b.Property<string>("proveedor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Proveedor");
                });

            modelBuilder.Entity("Protecno.Models.Evento", b =>
                {
                    b.HasOne("Protecno.Models.Reparacion", "reparacion")
                        .WithMany()
                        .HasForeignKey("reparacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reparacion");
                });

            modelBuilder.Entity("Protecno.Models.Factura", b =>
                {
                    b.HasOne("Protecno.Models.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("Protecno.Models.Pago", b =>
                {
                    b.HasOne("Protecno.Models.Reparacion", "Reparacion")
                        .WithMany()
                        .HasForeignKey("ReparacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reparacion");
                });

            modelBuilder.Entity("Protecno.Models.Producto", b =>
                {
                    b.HasOne("Protecno.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("Protecno.Models.Reparacion", b =>
                {
                    b.HasOne("Protecno.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("productoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Protecno.Models.ReparacionRepuesto", b =>
                {
                    b.HasOne("Protecno.Models.Reparacion", "Reparacion")
                        .WithMany()
                        .HasForeignKey("ReparacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Protecno.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId");

                    b.Navigation("Reparacion");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("Protecno.Models.Repuesto", b =>
                {
                    b.HasOne("Protecno.Models.Proveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("proveedorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("Protecno.Models.Usuario", b =>
                {
                    b.HasOne("Protecno.Models.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Protecno.Models.Empleado", b =>
                {
                    b.HasOne("Protecno.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
